{"ast":null,"code":"var _jsxFileName = \"/Users/saksham/Documents/Projects/SRSProject/frontend/src/components/ProductComments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./ProductComments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductComments = ({\n  productId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:3300/product/comment/${productId}`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch comments\");\n        }\n        const data = await response.json();\n\n        // Ensure data is an array (Firebase might return an object)\n        const formattedComments = data ? Object.values(data) : [];\n        setComments(formattedComments);\n      } catch (error) {\n        setError(error.message || \"An error occurred\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchComments();\n  }, [productId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading comments...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Customer Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments yet. Be the first to review!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: comment.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u2B50 \", comment.rating, \"/5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductComments, \"9U0+ds+yqH5Twr7odiPeQomUgmg=\");\n_c = ProductComments;\nexport default ProductComments;\nvar _c;\n$RefreshReg$(_c, \"ProductComments\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProductComments","productId","_s","comments","setComments","loading","setLoading","error","setError","fetchComments","response","fetch","ok","Error","data","json","formattedComments","Object","values","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","comment","index","userName","rating","_c","$RefreshReg$"],"sources":["/Users/saksham/Documents/Projects/SRSProject/frontend/src/components/ProductComments.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./ProductComments.css\";\n\nconst ProductComments = ({ productId }) => {\n    const [comments, setComments] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchComments = async () => {\n            try {\n                const response = await fetch(`http://localhost:3300/product/comment/${productId}`);\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch comments\");\n                }\n                const data = await response.json();\n\n                // Ensure data is an array (Firebase might return an object)\n                const formattedComments = data ? Object.values(data) : [];\n\n                setComments(formattedComments);\n            } catch (error) {\n                setError(error.message || \"An error occurred\");\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchComments();\n    }, [productId]);\n\n    if (loading) return <p>Loading comments...</p>;\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <div className=\"comments-section\">\n            <h3>Customer Reviews</h3>\n            {comments.length === 0 ? (\n                <p>No comments yet. Be the first to review!</p>\n            ) : (\n                <ul>\n                    {comments.map((comment, index) => (\n                        <li key={index} className=\"comment-item\">\n                            <strong>{comment.userName}</strong> {/* Fixed field name */}\n                            <span>‚≠ê {comment.rating}/5</span>\n                            <p>{comment.comment}</p> {/* Fixed field name */}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default ProductComments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}