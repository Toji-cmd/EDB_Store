{"ast":null,"code":"var _jsxFileName = \"/Users/saksham/Documents/Projects/SRSProject/frontend/src/components/CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./CommentSection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  productId\n}) => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [rating, setRating] = useState(5);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  useEffect(() => {\n    const fetchUserData = async () => {\n      if (!token) return;\n      try {\n        const response = await fetch(`http://localhost:3300/user?token=${token}`);\n        const data = await response.json();\n        if (response.ok) {\n          setUserName(data.user.name || \"Anonymous\");\n        } else {\n          setMessage(data.message || \"Failed to load user data.\");\n        }\n      } catch (error) {\n        setMessage(\"Error fetching user data\");\n      }\n    };\n    fetchUserData();\n  }, [token]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:3300/product/comment/${productId}`);\n        const data = await response.json();\n        console.log(\"Fetched comments from DB:\", data); // Debugging\n\n        // Ensure data is an array\n        const commentsArray = Array.isArray(data) ? data.reverse() : [];\n        setComments(commentsArray);\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n        setMessage(\"Error fetching comments.\");\n      }\n    };\n    fetchComments();\n  }, [productId]); // Make sure it runs when productId changes\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userName || !comment || !rating) {\n      setMessage(\"All fields are required!\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:3300/product/comment/${productId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userName,\n          comment,\n          rating\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setComments([{\n          userName,\n          comment,\n          rating,\n          timestamp: \"Just now\",\n          likes: 0,\n          replies: []\n        }, ...comments]);\n        setComment(\"\");\n        setRating(5);\n        setMessage(\"\");\n      } else {\n        setMessage(data.message || \"Failed to add comment.\");\n      }\n    } catch (error) {\n      setMessage(\"Error submitting comment.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [comments.length, \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input-box\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"comment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Add a comment...\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Submitting...\" : \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comment-list\",\n      children: comments.map((c, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"@\", c.userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-timestamp\",\n            children: c.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: c.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDC4D \", c.likes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDCAC Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"gAkFV2IiJuNJ5oPU7/unnKuG1Wo=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CommentSection","productId","_s","userName","setUserName","comment","setComment","comments","setComments","rating","setRating","message","setMessage","loading","setLoading","token","setToken","localStorage","getItem","fetchUserData","response","fetch","data","json","ok","user","name","error","fetchComments","console","log","commentsArray","Array","isArray","reverse","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","timestamp","likes","replies","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","type","disabled","map","c","index","_c","$RefreshReg$"],"sources":["/Users/saksham/Documents/Projects/SRSProject/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CommentSection.css\";\n\nconst CommentSection = ({ productId }) => {\n    const [userName, setUserName] = useState(\"\");\n    const [comment, setComment] = useState(\"\");\n    const [comments, setComments] = useState([]);\n    const [rating, setRating] = useState(5);\n    const [message, setMessage] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [token, setToken] = useState(localStorage.getItem(\"token\"));\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            if (!token) return;\n            try {\n                const response = await fetch(`http://localhost:3300/user?token=${token}`);\n                const data = await response.json();\n                if (response.ok) {\n                    setUserName(data.user.name || \"Anonymous\");\n                } else {\n                    setMessage(data.message || \"Failed to load user data.\");\n                }\n            } catch (error) {\n                setMessage(\"Error fetching user data\");\n            }\n        };\n        fetchUserData();\n    }, [token]);\n\n    useEffect(() => {\n        const fetchComments = async () => {\n            try {\n                const response = await fetch(`http://localhost:3300/product/comment/${productId}`);\n                const data = await response.json();\n                console.log(\"Fetched comments from DB:\", data); // Debugging\n    \n                // Ensure data is an array\n                const commentsArray = Array.isArray(data) ? data.reverse() : [];\n                setComments(commentsArray);\n            } catch (error) {\n                console.error(\"Fetch error:\", error);\n                setMessage(\"Error fetching comments.\");\n            }\n        };\n    \n        fetchComments();\n    }, [productId]); // Make sure it runs when productId changes\n    \n    \n    \n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!userName || !comment || !rating) {\n            setMessage(\"All fields are required!\");\n            return;\n        }\n        setLoading(true);\n        try {\n            const response = await fetch(`http://localhost:3300/product/comment/${productId}`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ userName, comment, rating }),\n            });\n\n            const data = await response.json();\n            if (response.ok) {\n                setComments([{ userName, comment, rating, timestamp: \"Just now\", likes: 0, replies: [] }, ...comments]);\n                setComment(\"\");\n                setRating(5);\n                setMessage(\"\");\n            } else {\n                setMessage(data.message || \"Failed to add comment.\");\n            }\n        } catch (error) {\n            setMessage(\"Error submitting comment.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"comment-section\">\n            <h3>{comments.length} Comments</h3>\n            <div className=\"comment-input-box\">\n                <form onSubmit={handleSubmit} className=\"comment-form\">\n                    <textarea\n                        placeholder=\"Add a comment...\"\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                        required\n                    />\n                    <button type=\"submit\" disabled={loading}>\n                        {loading ? \"Submitting...\" : \"Comment\"}\n                    </button>\n                </form>\n            </div>\n\n            {message && <p className=\"comment-message\">{message}</p>}\n\n            <ul className=\"comment-list\">\n                {comments.map((c, index) => (\n                    <li key={index} className=\"comment-item\">\n                        <div className=\"comment-content\">\n                            <strong>@{c.userName}</strong> <span className=\"comment-timestamp\">{c.timestamp}</span>\n                            <p>{c.comment}</p>\n                            <div className=\"comment-actions\">\n                                <span>👍 {c.likes}</span>\n                                <span>💬 Reply</span>\n                            </div>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default CommentSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}